{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/itty-router@3.0.12/node_modules/itty-router/dist/itty-router.mjs", "../src/handlers/concept.ts", "../src/handlers/search.ts", "../src/handlers/stock.ts", "../src/middleware/cors.ts", "../src/index.ts"],
  "sourceRoot": "dist",
  "sourcesContent": ["const e=({base:e=\"\",routes:r=[]}={})=>({__proto__:new Proxy({},{get:(a,o,t)=>(a,...p)=>r.push([o.toUpperCase(),RegExp(`^${(e+a).replace(/(\\/?)\\*/g,\"($1.*)?\").replace(/(\\/$)|((?<=\\/)\\/)/,\"\").replace(/(:(\\w+)\\+)/,\"(?<$2>.*)\").replace(/:(\\w+)(\\?)?(\\.)?/g,\"$2(?<$1>[^/]+)$2$3\").replace(/\\.(?=[\\w(])/,\"\\\\.\").replace(/\\)\\.\\?\\(([^\\[]+)\\[\\^/g,\"?)\\\\.?($1(?<=\\\\.)[^\\\\.\")}/*$`),p])&&t}),routes:r,async handle(e,...a){let o,t,p=new URL(e.url),l=e.query={};for(let[e,r]of p.searchParams)l[e]=void 0===l[e]?r:[l[e],r].flat();for(let[l,s,c]of r)if((l===e.method||\"ALL\"===l)&&(t=p.pathname.match(s))){e.params=t.groups||{};for(let r of c)if(void 0!==(o=await r(e.proxy||e,...a)))return o}}});export{e as Router};\n", "import { ApiResponse, ConceptData } from '@concept-stock-screener/types';\r\n\r\n// \u6A21\u64EC\u6982\u5FF5\u80A1\u6578\u64DA\r\nconst mockConcepts: ConceptData[] = [\r\n  {\r\n    id: 'ai-chips',\r\n    name: 'AI \u6676\u7247\u6982\u5FF5',\r\n    description: '\u4EBA\u5DE5\u667A\u6167\u6676\u7247\u76F8\u95DC\u7684\u80A1\u7968\uFF0C\u5305\u62EC\u8A2D\u8A08\u3001\u88FD\u9020\u3001\u5C01\u88DD\u7B49\u7522\u696D\u93C8',\r\n    stocks: [\r\n      {\r\n        symbol: '2330',\r\n        name: '\u53F0\u7A4D\u96FB',\r\n        price: 580,\r\n        change: 15,\r\n        changePercent: 0.026,\r\n        volume: 50000000,\r\n        marketCap: 15000000000000,\r\n        sector: '\u534A\u5C0E\u9AD4',\r\n        industry: '\u6676\u5713\u4EE3\u5DE5',\r\n      },\r\n      {\r\n        symbol: '2454',\r\n        name: '\u806F\u767C\u79D1',\r\n        price: 850,\r\n        change: 25,\r\n        changePercent: 0.03,\r\n        volume: 30000000,\r\n        marketCap: 1350000000000,\r\n        sector: '\u534A\u5C0E\u9AD4',\r\n        industry: 'IC \u8A2D\u8A08',\r\n      },\r\n    ],\r\n    keywords: ['AI', '\u6676\u7247', '\u4EBA\u5DE5\u667A\u6167', '\u534A\u5C0E\u9AD4'],\r\n    category: '\u79D1\u6280',\r\n  },\r\n  {\r\n    id: 'electric-vehicle',\r\n    name: '\u96FB\u52D5\u8ECA\u6982\u5FF5',\r\n    description: '\u96FB\u52D5\u8ECA\u7522\u696D\u76F8\u95DC\u80A1\u7968\uFF0C\u5305\u62EC\u96FB\u6C60\u3001\u99AC\u9054\u3001\u5145\u96FB\u6A01\u7B49',\r\n    stocks: [\r\n      {\r\n        symbol: '2317',\r\n        name: '\u9D3B\u6D77',\r\n        price: 105,\r\n        change: -2,\r\n        changePercent: -0.019,\r\n        volume: 80000000,\r\n        marketCap: 1450000000000,\r\n        sector: '\u96FB\u5B50\u96F6\u7D44\u4EF6',\r\n        industry: '\u96FB\u5B50\u88FD\u9020\u670D\u52D9',\r\n      },\r\n    ],\r\n    keywords: ['\u96FB\u52D5\u8ECA', '\u96FB\u6C60', '\u5145\u96FB', '\u65B0\u80FD\u6E90'],\r\n    category: '\u6C7D\u8ECA',\r\n  },\r\n];\r\n\r\nexport const conceptHandler = {\r\n  // \u7372\u53D6\u6240\u6709\u6982\u5FF5\u80A1\r\n  async getConcepts(): Promise<Response> {\r\n    try {\r\n      const response: ApiResponse<ConceptData[]> = {\r\n        success: true,\r\n        data: mockConcepts,\r\n        message: '\u6210\u529F\u7372\u53D6\u6982\u5FF5\u80A1\u5217\u8868',\r\n      };\r\n\r\n      return new Response(JSON.stringify(response), {\r\n        status: 200,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    } catch (error) {\r\n      const errorResponse: ApiResponse = {\r\n        success: false,\r\n        error: '\u7372\u53D6\u6982\u5FF5\u80A1\u5217\u8868\u5931\u6557',\r\n      };\r\n\r\n      return new Response(JSON.stringify(errorResponse), {\r\n        status: 500,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    }\r\n  },\r\n\r\n  // \u7372\u53D6\u55AE\u4E00\u6982\u5FF5\u80A1\r\n  async getConcept(request: Request): Promise<Response> {\r\n    try {\r\n      const url = new URL(request.url);\r\n      const conceptId = url.searchParams.get('id');\r\n\r\n      if (!conceptId) {\r\n        const errorResponse: ApiResponse = {\r\n          success: false,\r\n          error: '\u6982\u5FF5\u80A1 ID \u4E0D\u80FD\u70BA\u7A7A',\r\n        };\r\n\r\n        return new Response(JSON.stringify(errorResponse), {\r\n          status: 400,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      }\r\n\r\n      const concept = mockConcepts.find(c => c.id === conceptId);\r\n\r\n      if (!concept) {\r\n        const errorResponse: ApiResponse = {\r\n          success: false,\r\n          error: '\u627E\u4E0D\u5230\u8A72\u6982\u5FF5\u80A1',\r\n        };\r\n\r\n        return new Response(JSON.stringify(errorResponse), {\r\n          status: 404,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      }\r\n\r\n      const response: ApiResponse<ConceptData> = {\r\n        success: true,\r\n        data: concept,\r\n        message: '\u6210\u529F\u7372\u53D6\u6982\u5FF5\u80A1\u8CC7\u8A0A',\r\n      };\r\n\r\n      return new Response(JSON.stringify(response), {\r\n        status: 200,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    } catch (error) {\r\n      const errorResponse: ApiResponse = {\r\n        success: false,\r\n        error: '\u7372\u53D6\u6982\u5FF5\u80A1\u8CC7\u8A0A\u5931\u6557',\r\n      };\r\n\r\n      return new Response(JSON.stringify(errorResponse), {\r\n        status: 500,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    }\r\n  },\r\n};\r\n", "import { ApiResponse, SearchResponse } from '@concept-stock-screener/types';\r\n\r\n// \u6A21\u64EC\u641C\u5C0B\u7D50\u679C\r\nconst mockSearchResults = {\r\n  stocks: [\r\n    {\r\n      symbol: '2330',\r\n      name: '\u53F0\u7A4D\u96FB',\r\n      price: 580,\r\n      change: 15,\r\n      changePercent: 0.026,\r\n      volume: 50000000,\r\n      marketCap: 15000000000000,\r\n      sector: '\u534A\u5C0E\u9AD4',\r\n      industry: '\u6676\u5713\u4EE3\u5DE5',\r\n    },\r\n    {\r\n      symbol: '2454',\r\n      name: '\u806F\u767C\u79D1',\r\n      price: 850,\r\n      change: 25,\r\n      changePercent: 0.03,\r\n      volume: 30000000,\r\n      marketCap: 1350000000000,\r\n      sector: '\u534A\u5C0E\u9AD4',\r\n      industry: 'IC \u8A2D\u8A08',\r\n    },\r\n  ],\r\n  concepts: [\r\n    {\r\n      id: 'ai-chips',\r\n      name: 'AI \u6676\u7247\u6982\u5FF5',\r\n      description: '\u4EBA\u5DE5\u667A\u6167\u6676\u7247\u76F8\u95DC\u7684\u80A1\u7968',\r\n      stocks: [],\r\n      keywords: ['AI', '\u6676\u7247', '\u4EBA\u5DE5\u667A\u6167'],\r\n      category: '\u79D1\u6280',\r\n    },\r\n  ],\r\n  total: 3,\r\n  suggestions: ['AI', '\u6676\u7247', '\u534A\u5C0E\u9AD4', '\u53F0\u7A4D\u96FB', '\u806F\u767C\u79D1'],\r\n};\r\n\r\nexport const searchHandler = {\r\n  // \u641C\u5C0B\u529F\u80FD\r\n  async search(request: Request): Promise<Response> {\r\n    try {\r\n      const url = new URL(request.url);\r\n      const query = url.searchParams.get('q') || '';\r\n      const page = parseInt(url.searchParams.get('page') || '1');\r\n      const limit = parseInt(url.searchParams.get('limit') || '10');\r\n\r\n      if (!query.trim()) {\r\n        const errorResponse: ApiResponse = {\r\n          success: false,\r\n          error: '\u641C\u5C0B\u95DC\u9375\u5B57\u4E0D\u80FD\u70BA\u7A7A',\r\n        };\r\n\r\n        return new Response(JSON.stringify(errorResponse), {\r\n          status: 400,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      }\r\n\r\n      // \u6A21\u64EC\u641C\u5C0B\u908F\u8F2F\r\n      const filteredStocks = mockSearchResults.stocks.filter(\r\n        stock =>\r\n          stock.name.toLowerCase().includes(query.toLowerCase()) ||\r\n          stock.symbol.includes(query) ||\r\n          stock.sector.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n\r\n      const filteredConcepts = mockSearchResults.concepts.filter(\r\n        concept =>\r\n          concept.name.toLowerCase().includes(query.toLowerCase()) ||\r\n          concept.keywords.some(keyword =>\r\n            keyword.toLowerCase().includes(query.toLowerCase())\r\n          )\r\n      );\r\n\r\n      const total = filteredStocks.length + filteredConcepts.length;\r\n\r\n      // \u5206\u9801\u8655\u7406\r\n      const startIndex = (page - 1) * limit;\r\n      const paginatedStocks = filteredStocks.slice(\r\n        startIndex,\r\n        startIndex + limit\r\n      );\r\n      const paginatedConcepts = filteredConcepts.slice(\r\n        startIndex,\r\n        startIndex + limit\r\n      );\r\n\r\n      const response: ApiResponse<SearchResponse> = {\r\n        success: true,\r\n        data: {\r\n          stocks: paginatedStocks,\r\n          concepts: paginatedConcepts,\r\n          total,\r\n          suggestions: mockSearchResults.suggestions.filter(suggestion =>\r\n            suggestion.toLowerCase().includes(query.toLowerCase())\r\n          ),\r\n        },\r\n        message: `\u627E\u5230 ${total} \u500B\u76F8\u95DC\u7D50\u679C`,\r\n      };\r\n\r\n      return new Response(JSON.stringify(response), {\r\n        status: 200,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    } catch (error) {\r\n      const errorResponse: ApiResponse = {\r\n        success: false,\r\n        error: '\u641C\u5C0B\u5931\u6557',\r\n      };\r\n\r\n      return new Response(JSON.stringify(errorResponse), {\r\n        status: 500,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    }\r\n  },\r\n};\r\n", "// \u5167\u806F\u985E\u578B\u5B9A\u7FA9\r\ninterface ApiResponse<T = unknown> {\r\n  success: boolean;\r\n  data?: T;\r\n  message?: string;\r\n  error?: string;\r\n}\r\n\r\ninterface StockData {\r\n  symbol: string;\r\n  name: string;\r\n  price: number;\r\n  change: number;\r\n  changePercent: number;\r\n  volume: number;\r\n  marketCap: number;\r\n  sector: string;\r\n  industry: string;\r\n}\r\n\r\n// \u6A21\u64EC\u80A1\u7968\u6578\u64DA\r\nconst mockStocks: StockData[] = [\r\n  {\r\n    symbol: '2330',\r\n    name: '\u53F0\u7A4D\u96FB',\r\n    price: 580,\r\n    change: 15,\r\n    changePercent: 0.026,\r\n    volume: 50000000,\r\n    marketCap: 15000000000000,\r\n    sector: '\u534A\u5C0E\u9AD4',\r\n    industry: '\u6676\u5713\u4EE3\u5DE5',\r\n  },\r\n  {\r\n    symbol: '2317',\r\n    name: '\u9D3B\u6D77',\r\n    price: 105,\r\n    change: -2,\r\n    changePercent: -0.019,\r\n    volume: 80000000,\r\n    marketCap: 1450000000000,\r\n    sector: '\u96FB\u5B50\u96F6\u7D44\u4EF6',\r\n    industry: '\u96FB\u5B50\u88FD\u9020\u670D\u52D9',\r\n  },\r\n];\r\n\r\nexport const stockHandler = {\r\n  // \u7372\u53D6\u6240\u6709\u80A1\u7968\r\n  async getStocks(): Promise<Response> {\r\n    try {\r\n      const response: ApiResponse<StockData[]> = {\r\n        success: true,\r\n        data: mockStocks,\r\n        message: '\u6210\u529F\u7372\u53D6\u80A1\u7968\u5217\u8868',\r\n      };\r\n\r\n      return new Response(JSON.stringify(response), {\r\n        status: 200,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    } catch (error) {\r\n      const errorResponse: ApiResponse = {\r\n        success: false,\r\n        error: '\u7372\u53D6\u80A1\u7968\u5217\u8868\u5931\u6557',\r\n      };\r\n\r\n      return new Response(JSON.stringify(errorResponse), {\r\n        status: 500,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    }\r\n  },\r\n\r\n  // \u7372\u53D6\u55AE\u4E00\u80A1\u7968\r\n  async getStock(request: Request): Promise<Response> {\r\n    try {\r\n      const url = new URL(request.url);\r\n      const symbol = url.searchParams.get('symbol');\r\n\r\n      if (!symbol) {\r\n        const errorResponse: ApiResponse = {\r\n          success: false,\r\n          error: '\u80A1\u7968\u4EE3\u78BC\u4E0D\u80FD\u70BA\u7A7A',\r\n        };\r\n\r\n        return new Response(JSON.stringify(errorResponse), {\r\n          status: 400,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      }\r\n\r\n      const stock = mockStocks.find(s => s.symbol === symbol);\r\n\r\n      if (!stock) {\r\n        const errorResponse: ApiResponse = {\r\n          success: false,\r\n          error: '\u627E\u4E0D\u5230\u8A72\u80A1\u7968',\r\n        };\r\n\r\n        return new Response(JSON.stringify(errorResponse), {\r\n          status: 404,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      }\r\n\r\n      const response: ApiResponse<StockData> = {\r\n        success: true,\r\n        data: stock,\r\n        message: '\u6210\u529F\u7372\u53D6\u80A1\u7968\u8CC7\u8A0A',\r\n      };\r\n\r\n      return new Response(JSON.stringify(response), {\r\n        status: 200,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    } catch (error) {\r\n      const errorResponse: ApiResponse = {\r\n        success: false,\r\n        error: '\u7372\u53D6\u80A1\u7968\u8CC7\u8A0A\u5931\u6557',\r\n      };\r\n\r\n      return new Response(JSON.stringify(errorResponse), {\r\n        status: 500,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    }\r\n  },\r\n};\r\n", "// CORS \u4E2D\u9593\u4EF6\r\nexport const corsMiddleware = (request: Request) => {\r\n  const response = new Response();\r\n  \r\n  // \u8A2D\u7F6E CORS \u6A19\u982D\r\n  response.headers.set('Access-Control-Allow-Origin', '*');\r\n  response.headers.set('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\r\n  response.headers.set('Access-Control-Allow-Headers', 'Content-Type, Authorization');\r\n  \r\n  // \u8655\u7406\u9810\u6AA2\u8ACB\u6C42\r\n  if (request.method === 'OPTIONS') {\r\n    return new Response(null, { status: 200, headers: response.headers });\r\n  }\r\n  \r\n  return response;\r\n};\r\n", "import { Router } from 'itty-router';\r\nimport { conceptHandler } from './handlers/concept';\r\nimport { searchHandler } from './handlers/search';\r\nimport { stockHandler } from './handlers/stock';\r\nimport { corsMiddleware } from './middleware/cors';\r\n\r\n// \u5EFA\u7ACB\u8DEF\u7531\u5668\r\nconst router = Router();\r\n\r\n// \u4E2D\u9593\u4EF6 - \u4F7F\u7528 any \u985E\u578B\u4F86\u89E3\u6C7A itty-router \u985E\u578B\u517C\u5BB9\u6027\u554F\u984C\r\nrouter.all('*', corsMiddleware as any);\r\n\r\n// \u8DEF\u7531 - \u4F7F\u7528 any \u985E\u578B\u4F86\u89E3\u6C7A itty-router \u985E\u578B\u517C\u5BB9\u6027\u554F\u984C\r\nrouter.get('/api/health', () => new Response('OK', { status: 200 }));\r\nrouter.get('/api/stocks', stockHandler.getStocks as any);\r\nrouter.get('/api/stocks/:symbol', stockHandler.getStock as any);\r\nrouter.get('/api/concepts', conceptHandler.getConcepts as any);\r\nrouter.get('/api/concepts/:id', conceptHandler.getConcept as any);\r\nrouter.get('/api/search', searchHandler.search as any);\r\n\r\n// 404 \u8655\u7406\r\nrouter.all('*', () => new Response('Not Found', { status: 404 }));\r\n\r\n// \u8655\u7406\u8ACB\u6C42\r\nexport default {\r\n  async fetch(\r\n    request: Request,\r\n    env: Record<string, unknown>,\r\n    ctx: { waitUntil: (promise: Promise<unknown>) => void }\r\n  ): Promise<Response> {\r\n    return router.handle(request, env, ctx);\r\n  },\r\n};\r\n"],
  "mappings": "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",
  "names": ["e", "a", "r", "l"]
}
